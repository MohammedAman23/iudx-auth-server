#!/bin/sh

id=`id | cut -f1 -d'('`
if [ $id != "uid=0" ]
then
	echo
	echo "You must be root to run this script"
	echo
	exit
fi

if [ "$1" = "test" ]
then
	./test/setup.sh
fi

useradd -s /sbin/nologin -d /nonexistent _aaa

rm -rf passwords
mkdir passwords

touch passwords/auth.db.password
touch passwords/admin.db.password

#------- Passwords for various operations -----------

touch passwords/update_crl.db.password

#----------------------------------------------------

chmod 400 passwords/*

for f in `ls passwords`
do
	head /dev/urandom | sha256sum | awk '{ print $1 }' > passwords/$f 

	password=`cat passwords/$f`
	label=`echo $f | cut -f1 -d'.'`

	sed -i "s/XXX_$label/$password/" schema.sql 
done

echo your-telegram-api-key		> telegram.apikey
echo your-telegram-chat-id		> telegram.chatid

echo your-razorpay-key-id		> rzpay.key.id
echo your-razorpay-key-secret		> rzpay.key.secret

chmod 400 telegram.*
chmod 400 *.sql
chmod 400 rzpay.*

# setup postgresql
apt install -y postgresql postgresql-contrib
apt install -y libpq-dev

until pg_isready
do
	pg_ctlcluster 12 main start
	sleep 1
done

chmod u+x setup.postgresql.ubuntu
./setup.postgresql.ubuntu

# local setup

touch https-key.pem
chmod 400 https-key.pem

openssl req -x509 -nodes -days 365 -subj "/CN=auth.iudx.org.in" -newkey rsa:2048 -keyout https-key.pem -out https-certificate.pem

apt install -y nodejs npm nginx

# nginx config (w/o lets encrypt)
mkdir /etc/nginx/certs
cp ca.iudx.org.in.crt /etc/nginx/certs/
cp nginx.conf /etc/nginx/sites-available/default
systemctl restart nginx

i=`systemctl is-active nginx`

if [ $i != "active" ]
then
	echo
	echo "nginx not running"
	echo
	exit
fi

git clone --depth=1 https://github.com/rbccps-iisc/node-aperture
cd node-aperture
npm install
npm audit fix --force

cd ..
npm install
npm audit fix --force

	until pg_isready -h 127.0.0.1
	do
		sleep 1
	done

cp auth-server.service /etc/systemd/system
systemctl daemon-reload
systemctl enable auth-server.service
systemctl start auth-server.service

i=`systemctl is-active auth-server`

if [ $i != "active" ]
then
	echo
	echo "Auth server not running"
	echo
	exit
fi

./run.crl.tmux
