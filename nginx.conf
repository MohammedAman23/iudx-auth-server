# For testing, increase the rate value
limit_req_zone $binary_remote_addr zone=token:10m rate=5r/s;
limit_conn_zone $binary_remote_addr zone=addr:10m;

server {
	# SSL configuration
	#
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	ssl_verify_client on;
	ssl_client_certificate /etc/nginx/certs/ca-certs.crt;
	ssl_stapling on;
	# ssl_session_cache  builtin:1000  shared:SSL:10m;

	# gzip settings
	gzip on;
	gzip_types application/json;
	gzip_proxied any;
	gzip_min_length 1000; # gzip performed when Content-Length > 1000 bytes

	server_name AUTH_DOMAIN;

	location / {

	limit_conn addr 100;

        proxy_set_header        Host $host;
        proxy_set_header        X-Real-IP $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Proto $scheme;
        proxy_set_header        X-Forwarded-SSL $ssl_client_escaped_cert;

        proxy_pass          http://localhost:3000;

	}

	error_page 495 /client_ssl_error.json;
	error_page 496 /ssl_error.json;
	error_page 497 /https_error.json;
	error_page 502 /bad_gateway.json;
	error_page 503 /service_unavailable.json;

	location /client_ssl_error.json {
		return 400 '{"error":{"message":"Error occured during certificate verification. (Is your certificate expired?)"}}\n';
	}

	location /ssl_error.json {
		return 400 '{"error":{"message":"No SSL certificate sent with request"}}\n';
	}

	location /https_error.json {
		return 400 '{"error":{"message":"Invalid Request"}}\n';
	}

	location /bad_gateway.json {
		return 502 '{"error":{"message":"Bad gateway"}}\n';
	}

	location /service_unavailable.json {
		return 503 '{"error":{"message":"Service unavailable"}}\n';
	}

	location = /auth/v1/token {

	limit_conn addr 100;
	limit_req zone=token burst=5 nodelay;

        proxy_set_header        Host $host;
        proxy_set_header        X-Real-IP $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Proto $scheme;
        proxy_set_header        X-Forwarded-SSL $ssl_client_escaped_cert;

        proxy_pass          http://localhost:3000;

	}

    listen [::]:443 ssl ipv6only=on; 
    listen 443 ssl;
    ssl_certificate /home/iudx-auth-server/https-certificate.pem;
    ssl_certificate_key /home/iudx-auth-server/https-key.pem;

}

# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#	listen 80;
#	listen [::]:80;
#
#	server_name example.com;
#
#	root /var/www/example.com;
#	index index.html;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}
